package com.project.euler;

import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class EvenFibonacciNumbers {

	/**
	 * Problem 2 Even Fibonacci numbers. Each new term in the Fibonacci sequence is
	 * generated by adding the previous two terms. By starting with 1 and 2, the
	 * first 10 terms will be:
	 * 
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * 
	 * By considering the terms in the Fibonacci sequence whose values do not exceed
	 * four million, find the sum of the even-valued terms.
	 */
	public float fibonacciEvenSum4mill() {

		float i, aux;
		float sum = 0;
		for (i = 1;; i++) {

			aux = fbnc(i);

			if (aux % 2 == 0)
				sum = sum + fbnc(i);
			if (aux > 4000000.00)
				break;
		}
		return sum;
	}

	public float fbnc(float n) {
		if (n <= 1)
			return 1;
		else
			return n * fbnc(n - 1);

	}

	@Test
	public void test() {
		assertTrue(fibonacciEvenSum4mill() == 4.3954712E7);
	}

}
